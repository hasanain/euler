#lang scheme

; Project Euler Problem 2
; =======================
;
; Each new term in the Fibonacci sequence is generated by adding the
; previous two terms. By starting with 1 and 2, the first 10 terms will be:;
;
; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
;
; Find the sum of all the even-valued terms in the sequence which do not
; exceed four million.

(define (fib-list x)
  (define (fib-inner a b)
    (cond
      ((> b (- x 1)) '())
      (else (cons b (fib-inner b (+ a b))))))
  (fib-inner 0 1))

(define (sum l)
  (cond
    ((null? l) 0)
    (else (+ (car l) (sum (cdr l))))))

(define (even? n)
  (= (remainder n 2) 0))

(define (filter f l)
  (cond
    ((null? l) '())
    ((f (car l)) (cons (car l) (filter f (cdr l))))
    (else (filter f (cdr l)))))

(sum (filter even? (fib-list 4000000)))